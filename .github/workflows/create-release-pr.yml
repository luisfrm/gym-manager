name: Create Release PR

on:
  push:
    branches:
      - develop

permissions:
  contents: write

jobs:
  create-release-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: "latest"

      - name: Install dependencies
        run: bun install

      - name: Install semantic-release
        run: bun add -g semantic-release @semantic-release/git

      - name: Get next version
        id: get_version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          NEXT_VERSION=$(bunx semantic-release --dry-run | grep "The next release version is" | cut -d' ' -f6)
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Get commits since last release
        id: get_commits
        run: |
          LAST_RELEASE=$(git describe --tags --abbrev=0 2>/dev/null || echo "initial")
          echo "Getting commits since: $LAST_RELEASE"
          
          # Get commits with detailed format
          COMMITS=$(git log $LAST_RELEASE..HEAD --pretty=format:"- **%s** (%h) - %an, %ar")
          
          # Count commits
          COMMIT_COUNT=$(git rev-list --count $LAST_RELEASE..HEAD 2>/dev/null || git rev-list --count HEAD)
          
          # Get commit types summary
          FEAT_COUNT=$(git log $LAST_RELEASE..HEAD --pretty=format:"%s" | grep -c "^feat" || echo "0")
          FIX_COUNT=$(git log $LAST_RELEASE..HEAD --pretty=format:"%s" | grep -c "^fix" || echo "0")
          DOCS_COUNT=$(git log $LAST_RELEASE..HEAD --pretty=format:"%s" | grep -c "^docs" || echo "0")
          REFACTOR_COUNT=$(git log $LAST_RELEASE..HEAD --pretty=format:"%s" | grep -c "^refactor" || echo "0")
          CHORE_COUNT=$(git log $LAST_RELEASE..HEAD --pretty=format:"%s" | grep -c "^chore" || echo "0")
          
          echo "commits<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT
          echo "feat_count=$FEAT_COUNT" >> $GITHUB_OUTPUT
          echo "fix_count=$FIX_COUNT" >> $GITHUB_OUTPUT
          echo "docs_count=$DOCS_COUNT" >> $GITHUB_OUTPUT
          echo "refactor_count=$REFACTOR_COUNT" >> $GITHUB_OUTPUT
          echo "chore_count=$CHORE_COUNT" >> $GITHUB_OUTPUT

      - name: Check for existing release branch
        id: check_branch
        uses: actions/github-script@v7
        with:
          script: |
            const { data: branches } = await github.rest.repos.listBranches({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            const releaseBranch = branches.find(b => b.name.startsWith('release/'));
            return releaseBranch ? releaseBranch.name : null;

      - name: Create or Update Release PR
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: master
          branch: release/${{ steps.get_version.outputs.next_version }}
          title: "Release ${{ steps.get_version.outputs.next_version }}"
          body: |
            ## Release ${{ steps.get_version.outputs.next_version }}
            
            This PR was automatically created to release version ${{ steps.get_version.outputs.next_version }}.
            
            ### ðŸ“Š Release Summary
            - **Total commits**: ${{ steps.get_commits.outputs.commit_count }}
            - **Features**: ${{ steps.get_commits.outputs.feat_count }}
            - **Bug fixes**: ${{ steps.get_commits.outputs.fix_count }}
            - **Documentation**: ${{ steps.get_commits.outputs.docs_count }}
            - **Refactoring**: ${{ steps.get_commits.outputs.refactor_count }}
            - **Chores**: ${{ steps.get_commits.outputs.chore_count }}
            
            ### ðŸ”„ Changes included in this release:
            ${{ steps.get_commits.outputs.commits }}
            
            ---
            
            **Instructions**: Please review the changes above and merge this PR when ready to deploy to production.
            
            > ðŸ¤– This PR was automatically generated by GitHub Actions
          labels: |
            release
            automated pr
          delete-branch: true 